/*
 * Copyright 2021 Paul Rybitskyi, paul.rybitskyi.work@gmail.com
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package com.paulrybitskyi.hiltbinder.processor.javac.generator

import com.paulrybitskyi.hiltbinder.BindType
import com.paulrybitskyi.hiltbinder.processor.javac.model.ModuleSchema
import com.squareup.javapoet.JavaFile
import com.squareup.javapoet.TypeSpec
import javax.annotation.processing.Filer

internal class ModuleFileGenerator(
    private val typeSpecFactory: TypeSpecFactory,
    private val filer: Filer
) {


    fun generateFiles(moduleSchemas: List<ModuleSchema>) {
        for(moduleSchema in moduleSchemas) {
            val typeSpec = typeSpecFactory.createTypeSpec(moduleSchema)
            val javaFile = typeSpec.generateJavaFile(moduleSchema.packageName)

            javaFile.writeTo(filer)
        }
    }


    private fun TypeSpec.generateJavaFile(packageName: String): JavaFile {
        return JavaFile.builder(packageName, this)
            .addFileComment("Generated by @${BindType::class.simpleName}. Do not modify!")
            .build()
    }


}